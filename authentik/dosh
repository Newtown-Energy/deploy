#!/usr/bin/env bash
# Do - The Simplest Build Tool on Earth.
# Documentation and examples see https://github.com/8gears/do
#
SCRIPTNAME=`basename "$0"`
BASEDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source lib/util.sh

gen_keys() {

    [ "$(id -u)" -eq 0 ] || { echo "This script must be run as root" >&2; exit 1; }

    cd ${BASEDIR}

    [ -f .env ] || cp env.example .env

    _apt-get-update
    _apt-get-install pwgen

    local bootpass=$(grep -E '^[a-zA-Z]{4,8}$' /usr/share/dict/words | shuf -n4 | tr '\n' ' ' | sed 's/ $//' && echo)
    _add_if_missing_or_empty ".env" "PG_PASS" `pwgen -s 32`
    _add_if_missing_or_empty ".env" "AUTHENTIK_SECRET_KEY" `pwgen -s 32`
    _add_if_missing_or_empty ".env" "AUTHENTIK_BOOTSTRAP_PASSWORD" "\"$bootpass\""

}

install() {

    [ "$(id -u)" -eq 0 ] || { echo "This script must be run as root" >&2; exit 1; }

    cd ${BASEDIR}

    _apt-get-install docker.io docker-compose

    # make our data dirs
    mkdir -p data
    cd data
    mkdir -p certs media postgres redis templates
    cd ..

    gen_keys

    # wire it up to systemd
    ln -sf ${BASEDIR}/authentik.service /etc/systemd/system/authentik.service
    systemctl daemon-reload
    systemctl enable authentik
}

"$@" # <- execute the task
[ "$#" -gt 0 ] || printf "Usage:\n\t./${SCRIPTNAME} %s\n" "($(compgen -A function | grep '^[^_]' | paste -sd '|' -))"

