#!/usr/bin/env bash
# Do - The Simplest Build Tool on Earth.
# Documentation and examples see https://github.com/8gears/do
#
SCRIPTNAME=`basename "$0"`
BASEDIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source lib/util.sh

install() {
    [ "$(id -u)" -eq 0 ] || { echo "This script must be run as root" >&2; exit 1; }

    cd ${BASEDIR}

    pushd /etc/systemd/system > /dev/null
    cp $BASEDIR/dokuwiki.service dokuwiki.service
    systemctl daemon-reload
    popd > /dev/null

    systemctl enable --now dokuwiki

    popd > /dev/null
}

install-caddy() {
    [ "$(id -u)" -eq 0 ] || { echo "This script must be run as root" >&2; exit 1; }

    cd ${BASEDIR}

    [ -f .env ] || cp env.example .env

    _apt-get-update
    _apt-get-install caddy gettext-base

    # Pull in our .env values if they exist
    set -a # automatically export all variables
    source .env
    set +a # stop automatically exporting
    [ -z "$FQDN" ] && { echo "Error: FQDN isn't specified in .env" >&2; exit 1; }
    [ -z "$DESTIP" ] && { echo "Error: DESTIP isn't specified in .env" >&2; exit 1; }

    pushd /etc/caddy > /dev/null
    mkdir -p available enabled
    cat ${BASEDIR}/dokuwiki.caddyfile | envsubst > available/dokuwiki.caddyfile

    cd enabled
    ln -sf ../available/dokuwiki.caddyfile dokuwiki.caddyfile

    systemctl reload caddy

    popd > /dev/null
}

uninstall() {
    [ "$(id -u)" -eq 0 ] || { echo "This script must be run as root" >&2; exit 1; }

    cd ${BASEDIR}

    # Remove systemd scripts
    pushd /etc/systemd/system > /dev/null
    rm -f tinc.service tinc\@.service
    popd > /dev/null

    echo Removed systemd integration.  Not removing data or docker containers.
}

"$@" # <- execute the task
[ "$#" -gt 0 ] || printf "Usage:\n\t./${SCRIPTNAME} %s\n" "($(compgen -A function | grep '^[^_]' | paste -sd '|' -))"

