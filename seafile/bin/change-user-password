#!/usr/bin/env python3

import os
import sys
import hashlib
import argparse
import getpass
import subprocess
import shlex

"""
Log in to the mysql docker container and change a user password in the
seafile user db.
"""

def hash_pass(passphrase):
    salt = os.urandom(32)
    iterations = 10000
    hash = hashlib.pbkdf2_hmac('sha256', passphrase, salt, iterations, 32)
    return f"PBKDF2SHA256${iterations}${salt.hex()}${hash.hex()}"   

def prompt_for_pass():
    """Prompt user to enter password, then again to confirm."""
    while True:
        password = getpass.getpass("Enter new password: ")
        confirm = getpass.getpass("Confirm password: ")
        if password == confirm:
            return password.encode('utf-8')
        print("Passwords don't match. Please try again.")

def main():
    parser = argparse.ArgumentParser(description="Change a Seafile user's password in MySQL.")
    parser.add_argument('email', help="The email address of the user")
    args = parser.parse_args()
    email = args.email
    
    # Get MySQL root password from environment or .env file
    mysql_root_password = os.getenv('INIT_SEAFILE_MYSQL_ROOT_PASSWORD')
    
    if not mysql_root_password:
        env_path = os.path.join(os.path.dirname(__file__), '..', '.env')
        if os.path.exists(env_path):
            with open(env_path, 'r') as f:
                for line in f:
                    if line.startswith('INIT_SEAFILE_MYSQL_ROOT_PASSWORD='):
                        mysql_root_password = line.split('=', 1)[1].strip()
                        break
    
    if not mysql_root_password:
        print("Error: Could not find INIT_SEAFILE_MYSQL_ROOT_PASSWORD in environment or .env file")
        sys.exit(1)

    database_name = "ccnet_db"
    table_name = "EmailUser"
    email_col = "email"
    pass_col = "passwd"
    
    # Check if user exists first
    escaped_email = email.replace("'", "''")
    check_sql = f"SELECT COUNT(*) FROM {database_name}.{table_name} WHERE {email_col} = '{escaped_email}';"
    check_cmd = [
        'docker', 'exec', '-i', 'seafile-mysql',
        'mysql', '-u', 'root', f'-p{mysql_root_password}',
        '-sN', '-e', check_sql
    ]
    
    try:
        result = subprocess.run(check_cmd, capture_output=True, text=True, check=True)
        user_count = int(result.stdout.strip())
        if user_count == 0:
            print(f"Error: User with email '{email}' not found in database")
            sys.exit(1)
        print(f"Found user: {email}")
    except subprocess.CalledProcessError as e:
        print(f"Error checking user existence: {e.stderr}")
        sys.exit(1)
    except ValueError:
        print("Error: Invalid response from database")
        sys.exit(1)

    passphrase = prompt_for_pass()
    hashed = hash_pass(passphrase)
    
    
    # The database is in a docker container called seafile-mysql. It
    # doesn't expose any ports.  Not sure how to get in there, but we
    # know the root password, the database name, the table name, the
    # id of the user (their email), and the schema.

    # Update password in MySQL database
    escaped_hashed = hashed.replace("'", "''")
    update_sql = f"UPDATE {database_name}.{table_name} SET {pass_col} = '{escaped_hashed}' WHERE {email_col} = '{escaped_email}';"
    
    # Execute MySQL command in docker container
    docker_cmd = [
        'docker', 'exec', '-i', 'seafile-mysql',
        'mysql', '-u', 'root', f'-p{mysql_root_password}',
        '-e', update_sql
    ]
    
    try:
        result = subprocess.run(docker_cmd, capture_output=True, text=True, check=True)
        print(f"Password updated successfully for user: {email}")
    except subprocess.CalledProcessError as e:
        print(f"Error updating password: {e.stderr}")
        sys.exit(1)

if __name__ == "__main__":
    main()
